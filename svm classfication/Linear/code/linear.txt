<-------------------- SVM --------------->

RI=1
NRI=0

<----PER6------>
sample1(1,26) = 5;
for i=2:9924
sample1(i,26) = sample1(i,3) - sample1(i-1,3);
end
<----PER18------>
sample1(1,27) = 15;
sample1(2,27) = 20;
sample1(3,27) = 25;
for i=4:9924
sample1(i,27) = sample1(i,3) - sample1(i-3,3);
end
<----PER24------>
sample1(1,28) = 20;
sample1(2,28) = 25;
sample1(3,28) = 30;
sample1(4,28) = 50;
for i=5:9924
sample1(i,28) = sample1(i,3) - sample1(i-4,3);
end
<------VPER6------>
for i=1:9924
sample1(i,29) = sample1(i,3) * sample1(i,26);
end
<------VPER18------>
for i=1:9924
sample1(i,30) = sample1(i,3) * sample1(i,27);
end
<------VPER24------>
for i=1:9924
sample1(i,31) = sample1(i,3) * sample1(i,28);
end
<------VPC20------->
for i=1:9924
sample1(i,32) = sample1(i,3) * sample1(i,9);
end

<------------
 Total RI = 748
 RI from 8933 to 9924 = 100
 RI detected by Linear SVM Model = 3
 RI detected by CART classification method = 76 
 RI detected by rbf(Radial basis kernel) tuned SVM Model = 53

------------>

<-----COL=6 FOR RI/NRI-------->
sample(1,6)=0;
sample(2,6)=0;
for i=3:9924
if sample(i,1)==sample(i-2,1)
if abs(sample(i,5)) + abs(sample(i-2,5)) >= 30
sample(i,6)=1;
else
sample(i,6)=0;
end
else
sample(i,6)=0;
end
end

<---------RI/NRI FOR TRAINING------->
for i=1:8932
Y_train(i,1) = sample(i,6);
end

<-------PREDICTORS FOR TRAINING------->
for i=1:8932
for j=1:32
X_train(i,j) = sample1(i,j);
end
end

<-------PREDICTORS FOR TESTING------>
for i=8933:9924
for j=1:32
X_test(i-8932,j) = sample1(i,j);
end
end

<-----------LINEAR KERNEL MODEL SVM------->

SVMmodel1 = fitcsvm(X_train,Y_train,'KernelFunction','linear','Standardize',true,'KernelScale','auto','BoxConstraint',300,'Cost',[0 1;1.5 0])

Y_predict1 = predict(SVMmodel1,X_test);

for i=8933:9924
if sample(i,6) == 1 && Y_predict1(i-8932,1) == 1
conf_vec(i-8932,1)=1;
elseif sample(i,6) == 0 && Y_predict1(i-8932,1) == 0
conf_vec(i-8932,1)=2;
elseif sample(i,6) == 0 && Y_predict1(i-8932,1) == 1
conf_vec(i-8932,1)=3;
elseif sample(i,6) == 1 && Y_predict1(i-8932,1) == 0
conf_vec(i-8932,1)=4;
end
end


TP=0;
FN=0;
FP=0;
for i=1:992
if conf_vec(i,1) == 1
TP=TP+1;
elseif conf_vec(i,1) == 3
FP=FP+1;
elseif conf_vec(i,1) == 4
FN=FN+1;
end
end

POD = TP/(TP+FN);
FAR = FP/(FP+TP);